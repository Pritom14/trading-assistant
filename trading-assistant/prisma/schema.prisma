// This Prisma schema defines users and trades for the Trading Assistant

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  trades    Trade[]
  userTrades UserTrade[]
  createdAt DateTime @default(now())
}

model Trade {
  id                String   @id @default(uuid())
  user              User     @relation(fields: [userId], references: [id])
  userId            String
  symbol            String
  side              String
  type              String
  entry             Float
  stop              Float
  target            Float
  confidence        Int
  rr                Float
  trailingStop      Float?
  origin            String?
  createdAt         DateTime   @default(now())
  validUntil        DateTime?
  confidenceFactors Json?
  status            String?    // e.g., "active", "expired", "filled"
  delivered         Boolean?   // For push queue

  @@index([userId])
  @@index([origin])
}

model UserTrade {
  id          String   @id @default(uuid())
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  symbol      String
  entryPrice  Float
  exitPrice   Float?
  quantity    Int
  direction   TradeDirection
  status      TradeStatus
  pnl         Float?
  timestamp   DateTime
  broker      String
  rawPayload  Json?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([userId])
  @@index([symbol])
  @@index([broker])
  @@index([timestamp])
}

enum TradeDirection {
  BUY
  SELL
}

enum TradeStatus {
  OPEN
  CLOSED
  REJECTED
}

model TradeInteraction {
  id        String   @id @default(cuid())
  userId    String
  tradeId   String
  action    String   // 'accepted', 'skipped', etc.
  timestamp DateTime @default(now())

  @@index([userId])
  @@index([tradeId])
}
